  {
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "A sample template for first EC2 instance creation with conditions",
    "Parameters" : {
      "EnvType" : {
        "Description" : "Specify Environment Type",
        "Type" : "String",
        "ConstraintDescription" : "Specify only prod,staging and dev",
        "Default" : "staging",
        "AllowedValues" : ["prod", "staging", "dev"]
      },
      "WebServerInstances" : {
        "Type" : "String",
        "Default" : "t2.nano",
        "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
        "ConstraintDescription" : "Select valid instance type."
      },
      "DBServerInstances" : {
        "Type" : "String",
        "Default" : "t2.nano",
        "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
        "ConstraintDescription" : "Select valid instance type."
      },
      "KeyPairParameter" : {
        "Type" : "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription" : "KeyPair should exist in this region"
      },
      "S3Images" : {
        "Type" : "String",
        "Description" : "Give S3 bucket name (It should be unique in region)"
      }
    },
    "Conditions" : {
      "CreateProdResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "prod"]},
      "CreateDevResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "dev"]},
      "CreateStagResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "staging"]},
      "ProdOrStagResources" : {"Fn::Or" : [ {"Condition" : "CreateProdResources"}, {"Condition" : "CreateStagResources"}]}
    },
    "Mappings" : {
      "EC2AmazonAMI64HVM" : {
        "ap-south-1" : { "AMI" : "ami-531a4c3c" },
        "ap-southeast-1" : { "AMI" : "ami-68097514" },
        "us-east-1" : { "AMI" : "ami-97785bed" },
        "us-west-1" : { "AMI" : "ami-824c4ee2" }
      }
    },
    "Resources" : {
      "PublicWebServerSG" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Allow http to client host",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
            {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
          ]
          }
        },
      "WebToMySQLServerSG" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Allow MySQL to client host",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "3606", "ToPort" : "3606", "CidrIp" : "0.0.0.0/0"}
          ]
        }
      },
      "WebServer01" : {
        "Type" : "AWS::EC2::Instance",
        "Condition" : "ProdOrStagResources",
        "Properties" : {
          "ImageId" : { "Fn::FindInMap": [ "EC2AmazonAMI64HVM", { "Ref" : "AWS::Region" }, "AMI" ]},
          "SecurityGroupIds" : [ {"Ref" : "PublicWebServerSG"} ],
            "InstanceType" : { "Ref" : "WebServerInstances" },
            "KeyName" : { "Ref" : "KeyPairParameter" },
            "Tags" : [{
              "Key" : "Owner",
              "Value" : "Sharad"
              }]
          }
        },
        "DBServer01" : {
          "Type" : "AWS::EC2::Instance",
          "Condition" : "CreateProdResources",
          "Properties" : {
            "ImageId" : { "Fn::FindInMap": [ "EC2AmazonAMI64HVM", { "Ref" : "AWS::Region" }, "AMI" ]},
            "SecurityGroupIds" : [ {"Ref" : "PublicWebServerSG"} ],
            "InstanceType" : { "Ref" : "DBServerInstances" },
            "KeyName" : { "Ref" : "KeyPairParameter" },
            "Tags" : [{
              "Key" : "Database",
              "Value" : "MySQL"
              }]
          }
        },
        "S3PublicReadWP" : {
          "Type" : "AWS::S3::Bucket",
          "Properties" : {
            "BucketName" : { "Ref" : "S3Images" },
            "AccessControl" : "PublicRead"
          }
        }
      },
      "Outputs" : {
        "webserver" : {
          "Condition" : "ProdOrStagResources",
          "Description" : "WebServer01 instance id",
          "Value" : { "Ref" :  "WebServer01" }
        }
      }
    }
